{"ast":null,"code":"var _jsxFileName = \"/Users/tabethahorn/Documents/code/elementaryMusic/src/Components/LessonDisplay/LessonDisplay.js\",\n  _s = $RefreshSig$();\nimport './LessonDisplay.css';\nimport { useLocation } from 'react-router-dom';\nimport repDir from '../../repGood2.json';\nimport { shuffleArray, selectRandomItems } from '../../utilities';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LessonDisplay() {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const selectedMelodicConcept = searchParams.get('melodicConcept');\n  const selectedSongsInHolding = useSelector(state => state.selectedSongs.selectedSongs);\n\n  // SEARCHES FOR SONG TITLE THAT CAN PRESENT CONCEPT\n  const findFocusSong = (concept, selectedSongs) => {\n    const matchingSongs = [];\n    for (const song of repDir) {\n      if (song.function.melodic.presentation.includes(concept)) {\n        matchingSongs.push(song.songTitle);\n      }\n    }\n    if (matchingSongs.length === 0) {\n      return 'No matching song found.  Go on a repertoire hunt!';\n    }\n    return selectRandomItems(matchingSongs, 1)[0];\n  };\n  const focusSongTitle = findFocusSong(selectedMelodicConcept, selectedSongsInHolding);\n\n  // SEARCHES FOR LIST OF PRACTICE SONGS FOR SELECTED CONCEPT\n  const findMatchingPracticeSongs = (concept, focusSong, selectedSongs) => {\n    const matchingSongs = [];\n    for (const songTitle of selectedSongs) {\n      const matchingSong = repDir.find(song => song.songTitle === songTitle);\n      if (matchingSong && matchingSong.function.melodic.practice.includes(concept) && songTitle !== focusSongTitle) {\n        matchingSongs.push(songTitle);\n      }\n    }\n    for (const song of repDir) {\n      if (!matchingSongs.includes(song.songTitle) && song.songTitle !== focusSongTitle && song.function.melodic.practice.includes(concept)\n      // (song.function.melodic.practice.includes(concept) ||\n      //   selectedSongs.includes(song.songTitle)) &&\n      // song.songTitle !== focusSongTitle\n      ) {\n        matchingSongs.push(song.songTitle);\n      }\n    }\n    return selectRandomItems(matchingSongs, 5);\n  };\n  const practiceSongTitles = findMatchingPracticeSongs(selectedMelodicConcept, focusSongTitle, selectedSongsInHolding);\n\n  // const matchingSongs = findMatchingPracticeSongs(selectedMelodicConcept);\n  // const randomizedPracticeSongs = shuffleArray(\n  //   selectRandomItems(matchingSongs, 5)\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lessonDisplay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LESSON DISPLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Concept:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedMelodicConcept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Focus rep:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: focusSongTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Practice rep:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"practiceRep\",\n      children: practiceSongTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(LessonDisplay, \"N5w8fOiRVyHBiyO4kcRGBl6dX1c=\", false, function () {\n  return [useLocation, useSelector];\n});\n_c = LessonDisplay;\nexport default LessonDisplay;\nvar _c;\n$RefreshReg$(_c, \"LessonDisplay\");","map":{"version":3,"names":["useLocation","repDir","shuffleArray","selectRandomItems","useSelector","jsxDEV","_jsxDEV","LessonDisplay","_s","location","searchParams","URLSearchParams","search","selectedMelodicConcept","get","selectedSongsInHolding","state","selectedSongs","findFocusSong","concept","matchingSongs","song","function","melodic","presentation","includes","push","songTitle","length","focusSongTitle","findMatchingPracticeSongs","focusSong","matchingSong","find","practice","practiceSongTitles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","index","_c","$RefreshReg$"],"sources":["/Users/tabethahorn/Documents/code/elementaryMusic/src/Components/LessonDisplay/LessonDisplay.js"],"sourcesContent":["import './LessonDisplay.css';\nimport { useLocation } from 'react-router-dom';\nimport repDir from '../../repGood2.json';\nimport { shuffleArray, selectRandomItems } from '../../utilities';\nimport { useSelector } from 'react-redux';\n\nfunction LessonDisplay() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const selectedMelodicConcept = searchParams.get('melodicConcept');\n  const selectedSongsInHolding = useSelector(\n    (state) => state.selectedSongs.selectedSongs\n  );\n\n  // SEARCHES FOR SONG TITLE THAT CAN PRESENT CONCEPT\n  const findFocusSong = (concept, selectedSongs) => {\n    const matchingSongs = [];\n    for (const song of repDir) {\n      if (song.function.melodic.presentation.includes(concept)) {\n        matchingSongs.push(song.songTitle);\n      }\n    }\n    if (matchingSongs.length === 0) {\n      return 'No matching song found.  Go on a repertoire hunt!';\n    }\n    return selectRandomItems(matchingSongs, 1)[0];\n  };\n\n  const focusSongTitle = findFocusSong(\n    selectedMelodicConcept,\n    selectedSongsInHolding\n  );\n\n  // SEARCHES FOR LIST OF PRACTICE SONGS FOR SELECTED CONCEPT\n  const findMatchingPracticeSongs = (concept, focusSong, selectedSongs) => {\n    const matchingSongs = [];\n\n \n    for (const songTitle of selectedSongs) {\n      const matchingSong = repDir.find((song) => song.songTitle === songTitle);\n      if (\n        matchingSong &&\n        (matchingSong.function.melodic.practice.includes(concept) &&\n          songTitle !== focusSongTitle)\n      ) {\n      matchingSongs.push(songTitle);\n      }\n    }\n\n    for (const song of repDir) {\n      if (\n        !matchingSongs.includes(song.songTitle) &&\n        song.songTitle !== focusSongTitle &&\n        song.function.melodic.practice.includes(concept)\n        // (song.function.melodic.practice.includes(concept) ||\n        //   selectedSongs.includes(song.songTitle)) &&\n        // song.songTitle !== focusSongTitle\n      ) {\n        matchingSongs.push(song.songTitle);\n      }\n    }\n    return selectRandomItems(matchingSongs, 5);\n  };\n\n  const practiceSongTitles = findMatchingPracticeSongs(\n    selectedMelodicConcept,\n    focusSongTitle,\n    selectedSongsInHolding\n  );\n\n  // const matchingSongs = findMatchingPracticeSongs(selectedMelodicConcept);\n  // const randomizedPracticeSongs = shuffleArray(\n  //   selectRandomItems(matchingSongs, 5)\n  // );\n\n  return (\n    <div className=\"lessonDisplay\">\n      <h1>LESSON DISPLAY</h1>\n      <h2>Concept:</h2>\n      <p>{selectedMelodicConcept}</p>\n      <h3>Focus rep:</h3>\n      <p>{focusSongTitle}</p>\n      <h3>Practice rep:</h3>\n      <ul className=\"practiceRep\">\n        {practiceSongTitles.map((title, index) => (\n          <li key={index}>{title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default LessonDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}