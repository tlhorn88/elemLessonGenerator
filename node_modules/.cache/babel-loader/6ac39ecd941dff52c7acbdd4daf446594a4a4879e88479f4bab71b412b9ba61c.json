{"ast":null,"code":"var _jsxFileName = \"/Users/tabethahorn/Documents/code/elementaryMusic/src/Components/LessonDisplay/LessonDisplay.js\",\n  _s = $RefreshSig$();\nimport './LessonDisplay.css';\nimport { useLocation } from 'react-router-dom';\nimport repDir from '../../repGood2.json';\nimport { shuffleArray, selectRandomItems } from '../../utilities';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LessonDisplay() {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const selectedMelodicConcept = searchParams.get('melodicConcept');\n  const selectedSongsInHolding = useSelector(state => state.selectedSongs.selectedSongs);\n\n  // SEARCHES FOR SONG TITLE THAT CAN PRESENT CONCEPT\n  const findFocusSong = (concept, selectedSongs) => {\n    for (const songTitle of selectedSongs) {\n      const matchingSong = repDir.find(song => song.songTitle === songTitle);\n      if (matchingSong && matchingSong.function.melodic.presentation.includes(concept)) {\n        return songTitle;\n      }\n    }\n    const matchingSongs = repDir.filter(song => song.function.melodic.presentation.includes(concept));\n    if (matchingSongs.length === 0) {\n      return 'No matching song found.  Go on a repertoire hunt!';\n    }\n    return matchingSongs[0].songTitle;\n  };\n  const focusSong = findFocusSong(selectedMelodicConcept, selectedSongsInHolding);\n\n  // SEARCHES FOR LIST OF PRACTICE SONGS FOR SELECTED CONCEPT, EXCLUDING THE FOCUS SONG\n  const findMatchingPracticeSongs = (concept, focusSong, selectedSongs) => {\n    const matchingSongs = [];\n    for (const songTitle of selectedSongs) {\n      const matchingSong = repDir.find(song => song.songTitle === songTitle);\n      if (matchingSong && matchingSong.function.melodic.practice.includes(concept) && songTitle !== focusSong) {\n        matchingSongs.push(songTitle);\n      }\n    }\n    const additionalSongsNeeded = 5 - matchingSongs.length;\n    if (additionalSongsNeeded <= 0) {\n      return matchingSongs;\n    }\n    const remainingMatchingSongs = repDir.filter(song => song.function.melodic.practice.includes(concept));\n    const uniqueRemainingSongs = remainingMatchingSongs.filter(song => !matchingSongs.includes(song.songTitle));\n    const selectedRemainingSongs = uniqueRemainingSongs.slice(0, additionalSongsNeeded);\n    return matchingSongs.concat(selectedRemainingSongs);\n  };\n  const practiceSongTitles = findMatchingPracticeSongs(selectedMelodicConcept, focusSong, selectedSongsInHolding);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lessonDisplay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LESSON DISPLAY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Concept:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedMelodicConcept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Focus rep:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Practice rep:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"practiceRep\",\n      children: practiceSongTitles.map((title, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(LessonDisplay, \"N5w8fOiRVyHBiyO4kcRGBl6dX1c=\", false, function () {\n  return [useLocation, useSelector];\n});\n_c = LessonDisplay;\nexport default LessonDisplay;\nvar _c;\n$RefreshReg$(_c, \"LessonDisplay\");","map":{"version":3,"names":["useLocation","repDir","shuffleArray","selectRandomItems","useSelector","jsxDEV","_jsxDEV","LessonDisplay","_s","location","searchParams","URLSearchParams","search","selectedMelodicConcept","get","selectedSongsInHolding","state","selectedSongs","findFocusSong","concept","songTitle","matchingSong","find","song","function","melodic","presentation","includes","matchingSongs","filter","length","focusSong","findMatchingPracticeSongs","practice","push","additionalSongsNeeded","remainingMatchingSongs","uniqueRemainingSongs","selectedRemainingSongs","slice","concat","practiceSongTitles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","index","_c","$RefreshReg$"],"sources":["/Users/tabethahorn/Documents/code/elementaryMusic/src/Components/LessonDisplay/LessonDisplay.js"],"sourcesContent":["import './LessonDisplay.css';\nimport { useLocation } from 'react-router-dom';\nimport repDir from '../../repGood2.json';\nimport { shuffleArray, selectRandomItems } from '../../utilities';\nimport { useSelector } from 'react-redux';\n\nfunction LessonDisplay() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const selectedMelodicConcept = searchParams.get('melodicConcept');\n  const selectedSongsInHolding = useSelector(\n    (state) => state.selectedSongs.selectedSongs\n  );\n\n  // SEARCHES FOR SONG TITLE THAT CAN PRESENT CONCEPT\n  const findFocusSong = (concept, selectedSongs) => {\n    for (const songTitle of selectedSongs) {\n      const matchingSong = repDir.find((song) => song.songTitle === songTitle);\n      if (\n        matchingSong &&\n        matchingSong.function.melodic.presentation.includes(concept)\n      ) {\n        return songTitle;\n      }\n    }\n    const matchingSongs = repDir.filter((song) =>\n      song.function.melodic.presentation.includes(concept)\n    );\n\n    if (matchingSongs.length === 0) {\n      return 'No matching song found.  Go on a repertoire hunt!';\n    }\n\n    return matchingSongs[0].songTitle;\n  };\n\n  const focusSong = findFocusSong(\n    selectedMelodicConcept,\n    selectedSongsInHolding\n  );\n\n  // SEARCHES FOR LIST OF PRACTICE SONGS FOR SELECTED CONCEPT, EXCLUDING THE FOCUS SONG\n  const findMatchingPracticeSongs = (concept, focusSong, selectedSongs) => {\n    const matchingSongs = [];\n\n    for (const songTitle of selectedSongs) {\n      const matchingSong = repDir.find((song) => song.songTitle === songTitle);\n      if (\n        matchingSong &&\n        matchingSong.function.melodic.practice.includes(concept) &&\n        songTitle !== focusSong\n      ) {\n        matchingSongs.push(songTitle);\n      }\n    }\n\n    const additionalSongsNeeded = 5 - matchingSongs.length;\n\n    if (additionalSongsNeeded <= 0) {\n      return matchingSongs;\n    }\n\n    const remainingMatchingSongs = repDir.filter((song) =>\n      song.function.melodic.practice.includes(concept)\n    );\n\n    const uniqueRemainingSongs = remainingMatchingSongs.filter(\n      (song) => !matchingSongs.includes(song.songTitle)\n    );\n\n    const selectedRemainingSongs = uniqueRemainingSongs.slice(\n      0,\n      additionalSongsNeeded\n    );\n\n    return matchingSongs.concat(selectedRemainingSongs);\n  };\n\n  const practiceSongTitles = findMatchingPracticeSongs(\n    selectedMelodicConcept,\n    focusSong,\n    selectedSongsInHolding\n  );\n\n  return (\n    <div className=\"lessonDisplay\">\n      <h1>LESSON DISPLAY</h1>\n      <h2>Concept:</h2>\n      <p>{selectedMelodicConcept}</p>\n      <h3>Focus rep:</h3>\n      {/* <p>{focusSong}</p> */}\n      <h3>Practice rep:</h3>\n      <ul className=\"practiceRep\">\n        {practiceSongTitles.map((title, index) => (\n          <li key={index}>{title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default LessonDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}